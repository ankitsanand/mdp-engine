#!/bin/bash

domain=$1
problem=$2

# locate files
#echo phase0
if [ "$domain" == "race" ]; then
    FILES=`grep -l $problem raw/*/output.*`
else
    FILES=`grep $domain raw/*/output.* | awk '{ if( $9 == problem ) print $1; }' problem=$problem | cut -f1 -d:`
fi

if [ "$FILES" == "" ]; then
    echo No files for problem \'$problem\'
    exit 0
fi


# extract base policies
#echo phase1
for type in optimal random greedy; do
    file=`grep -l ^$type $FILES`
    if [ -e "$file" ]; then
        tail --lines=1 $file > data/$problem.$type
    fi
done


# extract rollout policies
#echo phase2
echo rollout
files0=`grep -l ^nrollout $FILES`
if [ "$files0" != "" ]; then
    for type in random greedy; do
        printf "  %s:" $type
        files1=`grep -l $type $files0`
        if [ "$files1" != "" ]; then
            widths=`grep -h ^$policy $files1 | cut -f2 -d, | sort | uniq`
            for width in $widths; do
                printf " %s" $width
                files2=`grep -l $width, $files1`
                nestings=`grep -h ^$policy $files2 | awk 'BEGIN { FS="[,)=]"; } { print $5; }' | sort -nr | uniq`
                > data/$problem.rollout.$type.$width
                for nesting in $nestings; do
                    files3=`grep -l nesting=$nesting $files2`
                    grep -h ^nrollout $files3 >> data/$problem.rollout.$type.$width
                done
            done
            printf "\n"
        else
            echo " <none>"
        fi
    done
fi


# extract policies: uct, ao3, ao4
#echo phase3
for policy in uct ao3 ao4; do
    echo $policy
    files0=`grep -l ^$policy $FILES`
    if [ "$files0" != "" ]; then
        for type in random greedy; do
            printf "  %s:" $type
            files1=`grep -l $type $files0`
            if [ "$files1" != "" ]; then
                widths=`grep -h ^$policy $files1 | cut -f2 -d, | sort | uniq`
                for width in $widths; do
                    printf " %s" $width
                    files2=`grep -l $width, $files1`
                    pars=`grep -h ^$policy $files2 | awk 'BEGIN { FS="[,)=]"; } { print $7; }' | sort -nr | uniq`
                    > data/$problem.$policy.$type.$width
                    for par in $pars; do
                        files3=`grep -l p=$par $files2`
                        grep -h ^$policy $files3 >> data/$problem.$policy.$type.$width
                    done
                done
                printf "\n"
            else
                echo " <none>"
            fi
        done
    fi
done

