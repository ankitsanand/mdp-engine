#!/usr/bin/env python

problem = "sailing"
microtask_number = 1
microtask_file = problem + "_mutask_"

tasks = [
    '-s 0 10',
    '-s 0 50',
    '-s 0 100',
]

policies = [ 1, 10, 20, 12, 22, 14, 24, 15, 25 ]
#policies = [ 15, 25 ]
rollout_widths = [ 10, 25, 50, 100, 250, 500, 1000 ]
uct_widths = [ 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000 ]
uct_parameters = [ 0, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30 ]
ao_widths = [ 10, 25, 50, 100, 250, 500, 1000 ]
#ao_widths = [ 2500, 5000, 10000 ]
ao_parameters = [ 0.0, 0.2, 0.4, 0.6, 0.8, 0.9, 1.0 ]

def open_file():
    f = open(microtask_file + str(microtask_number), 'w')
    f.write('#!/usr/bin/env python\n')
    f.write('import os\n')
    f.write('output = open("output.' + microtask_file + str(microtask_number) + '", "w")\n')
    f.write('cmd = "./' + problem + '  -f -a 1 -h 1 ')
    return f

def close_file(f):
    global microtask_number
    f.write('"\n')
    f.write('output.write("cmd=" + cmd + "\\n")\n')
    f.write('output.close()\n')
    f.write('os.system(cmd + " >> output.' + microtask_file + str(microtask_number) + '")\n')
    f.close()
    microtask_number += 1

for t in tasks:
    for p in policies:
        if p == 1 or p == 10 or p == 20: # Plain algorithms: 1=optimal, 10=greedy, 20=random
            f = open_file()
            f.write(t + ' ' + str(p) + ' ')
            f.write('0 0 0   0 0 0   0 0 0')
            close_file(f)
        elif p == 11 or p == 21: # Rollout: 11=greedy, 21=random
            for width in rollout_widths:
                    for nesting in range(1, 2):
                        f = open_file()
                        f.write(t + ' ' + str(p) + ' ')
                        f.write(str(width) + ' 50 ' + str(nesting))
                        f.write('   0 0 0   0 0 0')
                        close_file(f)
        elif p == 12 or p == 22: # UCT: 12=greedy, 22=random
            for width in uct_widths:
                    for par in uct_parameters:
                        f = open_file()
                        f.write(t + ' ' + str(p) + ' ')
                        f.write('0 0 0   ')
                        f.write(str(width) + ' 50 ' + str(par))
                        f.write('   0 0 0')
                        close_file(f)
        elif p == 13 or p == 23: # AO2: 13=greedy, 23=random
            for width in ao_widths:
                    for par in ao_parameters:
                        f = open_file()
                        f.write(t + ' ' + str(p) + ' ')
                        f.write('0 0 0   0 0 0   ')
                        f.write(str(width) + ' 50 ' + str(par))
                        close_file(f)
        elif p == 14 or p == 24: # AO3: 14=greedy, 24=random
            for width in ao_widths:
                    for par in ao_parameters:
                        f = open_file()
                        f.write(t + ' ' + str(p) + ' ')
                        f.write('0 0 0   0 0 0   ')
                        f.write(str(width) + ' 50 ' + str(par))
                        close_file(f)
        elif p == 15 or p == 25: # AO4: 15=greedy, 25=random
            for width in ao_widths:
                    for par in ao_parameters:
                        f = open_file()
                        f.write(t + ' ' + str(p) + ' ')
                        f.write('0 0 0   0 0 0   ')
                        f.write(str(width) + ' 50 ' + str(par))
                        close_file(f)

